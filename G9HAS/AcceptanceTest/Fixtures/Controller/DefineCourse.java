
/**
 * Generated by FITpro Fixture Generator
 */
package Fixtures.Controller;
import java.util.ArrayList;
import java.util.HashMap;
import controller.SystemManagerController;
import controller.UserClient;
import fit.ActionFixture;

public class DefineCourse extends ActionFixture {
	//	SystemManagerController controllerTest;
	public static UserClient userClient;
	private String teachingUnit;
	private String courseID;
	private String courseName;
	private String weeklyHours;
	private String year;
	private String semester;
	private ArrayList<String> units;

	public void setWeeklyHours(String weeklyHours) {
		this.weeklyHours = weeklyHours;
	}

	public void setTeachingUnit(String teachingUnit) {
		this.teachingUnit = teachingUnit;
	}

	public void setCourseName(String courseName) {
		this.courseName = courseName;
	}

	public void setCourseID(String courseID) {
		this.courseID = courseID;
	}

	public String checkIfThereIsEmptyField() {
		if(!units.contains(teachingUnit)) return "choose exist teaching unit"; 
		return String.valueOf(SystemManagerController.isEmptyFields( courseID,courseName,weeklyHours,teachingUnit));
	}

	public String checkWeeklyHours() {
		return String.valueOf(SystemManagerController.checkWeeklyHours(weeklyHours));
	}

	public String checkCourseID() {
		return String.valueOf(SystemManagerController.checkCourseID(courseID));
	}

	public String checkIsCourseAlreadyExist() {
		return String.valueOf(SystemManagerController.isCourseAlreadyExist(courseID,courseName,teachingUnit,weeklyHours,year,semester));
	}

	public void startController() {
		units= new ArrayList<String>();
		units.add("10");
		units.add("20");
		units.add("30");
				try {
					userClient = new UserClient("localhost",5555);
					HashMap<String,ArrayList<String>> msg = new HashMap<String,ArrayList<String>>();
					msg.put("getCurrentSemester",null);
					userClient.sendServer(msg);
					syncWithServer();
					if(userClient.ans != null){
						this.year = String.valueOf(((ArrayList<Integer>)userClient.ans).get(0));
						this.semester = String.valueOf(((ArrayList<Character>)userClient.ans).get(1)=='A'?1:2);
					}else return;
				} catch (Exception e1) {System.err.println("fit start failed");}
	}

	/**
	 * this method waits for new answer from server
	 */
	public static void syncWithServer()
	{
		synchronized(userClient)
		{
			UserClient.setFlagFalse();

			while(!userClient.isready())
			{
				try{
					userClient.wait();	
				}
				catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	}

}